/* script name: COZY_HOMES.SQL                           */
/* purpose:     DDL for creating table for the Project   */
/*                                                       */
/* date:        29 Nov 2015                              */
/*                                                       */
/*                                                       */

/*     make sure there is no table with the same name   */




/* DDL for Property Type Table   */

	CREATE TABLE PropertyType (
		TypeID VARCHAR(10) NOT NULL,
		TypeName VARCHAR(50) NOT NULL,
		CONSTRAINT PropertyType_PK PRIMARY KEY(TypeID)
);

/* DDL for Property Description Table  ----------------NOT IN USE     */

	CREATE TABLE PropertyDescription (
		PropertyID VARCHAR(20) NOT NULL,
		PropertyName VARCHAR(50) NOT NULL,
		Address VARCHAR(50),
		ZipCode VARCHAR(10) NOT NULL,
		Price DECIMAL(6,2) NOT NULL,
		LeasePeriod VARCHAR(10),
		TypeID VARCHAR(10) NOT NULL,
		PhoneNo VARCHAR(15),
		Rating DECIMAL(5,2),
		CONSTRAINT PropertyDesc_PK PRIMARY KEY(PropertyID),
		CONSTRAINT PropertyDesc_FK FOREIGN KEY(TypeID) REFERENCES PropertyType(TypeID)
); 


/* DDL for Property Table      */

CREATE TABLE Property(
PropertyID VARCHAR(20) NOT NULL,
PropertyName VARCHAR(60) NOT NULL,
Address VARCHAR(50),
ZipCode VARCHAR(10) NOT NULL,
PhoneNo VARCHAR(15),
Rating DECIMAL(5,2),
CONSTRAINT Property_PK PRIMARY KEY(PropertyID)
);


/* DDL for Apartment Table      */

CREATE TABLE APARTMENT(
ApartmentID VARCHAR(20) NOT NULL,
PropertyID VARCHAR(20) NOT NULL,
Price DECIMAL(6,2) NOT NULL,
LeasePeriod VARCHAR(10),
TypeID VARCHAR(10) NOT NULL,
CONSTRAINT Apartment_PK PRIMARY KEY(ApartmentID ),
CONSTRAINT Apartment_FK1 FOREIGN KEY(TypeID) REFERENCES PropertyType(TypeID),
CONSTRAINT Apartment_FK2 FOREIGN KEY(PropertyID) REFERENCES Property(PropertyID) on DELETE CASCADE

)



/* DDL for Agent Area Table      */

	CREATE TABLE AgentArea(
		AgentID NUMERIC(10,0) NOT NULL,
		ZipCode VARCHAR(10) NOT NULL,
		CONSTRAINT AgentArea_PK PRIMARY KEY (AgentID, ZipCode),		
		CONSTRAINT AgentArea_FK2 FOREIGN KEY(AgentID) REFERENCES AgentDetails(AgentID)
);


/* DDL for Agent Details Table      */

	CREATE TABLE AgentDetails(
		AgentID NUMERIC(10,0) NOT NULL,
		AgentFirstName VARCHAR(15) NOT NULL,
		AgentLastName VARCHAR(15),
		AgentRating INT(5) NOT NULL,
		PhoneNo VARCHAR(15) NOT NULL,
		CONSTRAINT AgentDetails_PK PRIMARY KEY(AgentID)
);


/* DDL for User Details Table      */

	CREATE TABLE UserDetails(
		UserName VARCHAR(15) NOT NULL,
		Password VARCHAR(255) NOT NULL,
		email varchar(50),
		telephone varchar(15),
		PostCode varchar(10),
		CONSTRAINT UserDetails_PK PRIMARY KEY(UserName, Password)
);


/* DDL for Admin Details Table      */

	CREATE TABLE AdminDetails(
		UserName VARCHAR(15) NOT NULL,
		Password VARCHAR(255) NOT NULL,
		
);





CREATE TABLE userinterest (
	username VARCHAR(15) NOT NULL,
	ApartmentID VARCHAR(20) NOT NULL,
	PropertyName VARCHAR(50) NOT NULL,
	TypeName VARCHAR(50) NOT NULL,
	Price DECIMAL(6,2) NOT NULL,
	LeasePeriod VARCHAR(10),
	Address VARCHAR(50),
	ZipCode VARCHAR(10) NOT NULL,
	Phoneno VARCHAR(15),
	CONSTRAINT userinterest_PK PRIMARY KEY(username,ApartmentID)
)



/* table for finding total number of users */

CREATE TABLE usercount(
TotalUsers INT
)



/* table for apartment modification by admin */

create table admin_update_history
( id INT AUTO_INCREMENT PRIMARY KEY,
  apt_id varchar(20),
 lease varchar (10),
 price decimal(6,2),
updated_date DATETIME DEFAULT NULL,
action varchar(50) DEFAULT NULL
 );




/* table for property modification by admin */

create table admin_update_history_property
(id INT AUTO_INCREMENT PRIMARY KEY,
  property_id varchar(20),
 property_name varchar (10),
 address varchar (30),
 phone_no varchar(20),
 rating decimal(5,2),
 zipcode varchar(10),
updated_date DATETIME DEFAULT NULL,
action varchar(10) DEFAULT NULL
)



/* table for listing */

create table listing
( ListingID INT AUTO_INCREMENT PRIMARY KEY,
  AgentID decimal(10,0),
 ApartmentID varchar (20),
AddedOn DATETIME DEFAULT GETDATE(),
Status varchar (10),
CONSTRAINT Listing_FK1 FOREIGN KEY(ApartmentID) REFERENCES apartment(ApartmentID),
CONSTRAINT Listing_FK2 FOREIGN KEY(AgentID) REFERENCES agentdetails(AgentID)
 
 
 );



/* table for different types of utility in property */

CREATE TABLE propertyutility(
PropertyID VARCHAR(20) NOT NULL,
UtilityID VARCHAR(20) NOT NULL,
Availability VARCHAR(20),
Charges DECIMAL(6,2),
CONSTRAINT propertyutility_PK PRIMARY KEY(PrpertyID,UtilityID),
CONSTRAINT propertyutility_FK1 FOREIGN KEY(PropertyID) REFERENCES Property(PropertyID) ON DELETE CASCADE,
CONSTRAINT propertyutility_FK2 FOREIGN KEY(UtilityID) REFERENCES utilitytype(UtilityID)
)



/* table for different types of utility */

CREATE TABLE utilitytype(
UtilityID VARCHAR(20) NOT NULL,
UtilityDescription VARCHAR(50) NOT NULL,
CONSTRAINT utilitytype_PK PRIMARY kEY(UtilityID)
)

CREATE TABLE zipcodeindex(
ZipCode VARCHAR(10) NOT NULL,
population INT(11),
VoilentCrime DECIMAL(6,2) NOT NULL,
PropertyCrime DECIMAL(6,2) NOT NULL,
LivabilityIndex DECIMAL(6,2) NOT NULL,
WalkScore DECIMAL(6,2) NOT NULL,
walkScoreRank VARCHAR(100),
CONSTRAINT zipcodeindex_PK PRIMARY KEY(ZipCode) 
)




/* trigger for user count */
DELIMITER $$
CREATE TRIGGER userdetails_insert
BEFORE INSERT ON userdetails 
FOR EACH ROW 
BEGIN
    UPDATE usercount
    SET TotalUsers= TotalUsers + 1;
     
END$$
DELIMITER ;




/* trigger for apartment update */

DELIMITER $$
CREATE TRIGGER Admin_Update 
BEFORE UPDATE ON apartment
FOR EACH ROW BEGIN
	INSERT INTO admin_update_history
	SET action= 'update',
    	apt_id=OLD.ApartmentID,

		lease= OLD.LeasePeriod,
		price=OLD.Price,
		updated_date= NOW();

END$$
DELIMITER ;


/* trigger for apartment update */

DELIMITER $$
CREATE TRIGGER Admin_Update_property 
BEFORE UPDATE ON property

FOR EACH ROW BEGIN 
INSERT INTO admin_update_history_property
SET action= 'update',
   	property_id =OLD.PropertyID,
       property_name =OLD.PropertyName,
address= OLD.Address,
       rating =OLD.Rating,
       phone_no =OLD.PhoneNo,
updated_date = NOW();


END$$
DELIMITER ;





